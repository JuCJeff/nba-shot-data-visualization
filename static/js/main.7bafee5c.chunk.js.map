{"version":3,"sources":["assets/nba-logoman-word-white.svg","components/TopNavBar.js","constants.js","components/Profile.js","components/ShotChart.js","components/CountSlider.js","components/DataViewCountainer.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavBar","className","src","logo","alt","React","Component","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerId","fullName","teamAbbreviation","Profile","this","props","playerInfo","teamCity","teamName","playerName","height","weight","pts","reb","ast","pie","window","d3_hexbin","hexbin","ShotChart","nba","stats","shots","PlayerID","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","style","id","CountSlider","state","inputValue","onChange","value","cleanValue","Number","setState","onCountSliderChange","span","min","max","marginLeft","RadioGroup","Radio","Group","DataViewContainer","count","onChartTypeChange","e","target","onTooltipChange","_","debounce","checkedChildren","unCheckedChildren","defaultChecked","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","player","onSelect","handleSelectPlayer","options","key","size","onSearch","placeholder","optionLabelProp","suffix","type","Main","loadPlayerInfo","findPlayer","info","Object","assign","commonPlayerInfo","playerHeadlineStats","console","log","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7bafee5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import React from 'react';\nimport logo from '../assets/nba-logoman-word-white.svg';\n\nclass TopNavBar extends React.Component {\n    render() {\n        return (\n            <header className='App-header'>\n                <img src={logo} className='App-logo' alt='logo'/>\n            </header>\n        );\n    }\n}\n\nexport default TopNavBar;\n\n","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\nexport const DEFAULT_PLAYER_INFO = {\n    playerId: 202695,\n    fullName: 'Kawhi Leonard',\n    teamAbbreviation: 'LAC',\n};\n   ","import React from 'react';\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\n\nexport class Profile extends React.Component {\n  render() {\n    const {\n      teamAbbreviation,\n      teamCity,\n      teamName,\n      playerName,\n      height,\n      weight,\n      playerId,\n      pts,\n      reb,\n      ast,\n      pie\n    } = this.props.playerInfo;\n\n    return (\n      <div className='profile'>\n        <div className='profile-entry player-name'>{`${playerName}`}</div>\n        <img\n          className='profile-pic'\n          src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n          alt='Profile'\n        />\n        <div className='profile-entry'>\n          <div className='profile-entry-left'>Team</div>\n          <div className='profile-entry-right'>{`${teamCity} ${teamName}`}</div>\n        </div>\n        <img\n          className='team-logo'\n          src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\n          alt='Team'\n        />\n        <div className='profile-entry'>\n          <div className='profile-entry-left'>Height</div>\n          <div className='profile-entry-right'>{`${height}`}</div>\n        </div>\n        <div className='profile-entry'>\n          <div className='profile-entry-left'>Weight</div>\n          <div className='profile-entry-right'>{`${weight}`}</div>\n        </div>\n        <div className='profile-entry'>\n          <div className='profile-entry-left'>PTS</div>\n          <div className='profile-entry-right'>{`${pts}`}</div>\n        </div>\n        <div className='profile-entry'>\n          <div className='profile-entry-left'>REB</div>\n          <div className='profile-entry-right'>{`${reb}`}</div>\n        </div>\n        <div className='profile-entry'>\n          <div className='profile-entry-left'>AST</div>\n          <div className='profile-entry-right'>{`${ast}`}</div>\n        </div>\n        <div className='profile-entry'>\n          <div className='profile-entry-left'>PIE</div>\n          <div className='profile-entry-right'>{`${pie}`}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\n\nwindow.d3_hexbin = { hexbin: hexbin }; // workaround library problem\n\nexport class ShotChart extends React.Component {\n  static propTypes = {\n    playerId: PropTypes.number,\n    minCount: PropTypes.number,\n    chartType: PropTypes.string,\n    displayTooltip: PropTypes.bool\n  };\n\n  componentDidUpdate() {\n    nba.stats\n      .shots({\n        PlayerID: this.props.playerId\n      })\n      .then(response => {\n        const final_shots = response.shot_Chart_Detail.map(shot => ({\n          x: (shot.locX + 250) / 10,\n          y: (shot.locY + 50) / 10,\n          action_type: shot.actionType,\n          shot_distance: shot.shotDistance,\n          shot_made_flag: shot.shotMadeFlag\n        }));\n\n        const courtSelection = d3.select('#shot-chart');\n        courtSelection.html('');\n        const chart_court = court().width(500);\n        const chart_shots = shots()\n          .shotRenderThreshold(this.props.minCount)\n          .displayToolTips(this.props.displayTooltip)\n          .displayType(this.props.chartType);\n        courtSelection.call(chart_court);\n        courtSelection.datum(final_shots).call(chart_shots);\n\n        d3.selectAll('.legend-text')\n          .style('fill', 'white')\n          .style('font-weight', 'normal');\n        d3.selectAll('.shot').style('stroke', 'black');\n      });\n  }\n  render() {\n    return <div id='shot-chart'></div>;\n  }\n}\n\nexport default ShotChart;\n","import React from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\nexport class CountSlider extends React.Component {\n  state = {\n    inputValue: 2\n  };\n\n  onChange = value => {\n    const cleanValue = Number(value) ? value : this.state.inputValue;\n    this.setState({\n      inputValue: cleanValue\n    });\n    this.props.onCountSliderChange(cleanValue);\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col span={12}>\n          <Slider\n            min={1}\n            max={20}\n            onChange={this.onChange}\n            value={this.state.inputValue}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={1}\n            max={20}\n            style={{ marginLeft: 16 }}\n            onChange={this.onChange}\n            value={this.state.inputValue}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default CountSlider;\n","import React from 'react';\nimport _ from 'lodash';\nimport { ShotChart } from './ShotChart';\nimport { CountSlider } from './CountSlider';\nimport { Radio, Row, Col, Switch } from 'antd';\n\nconst RadioGroup = Radio.Group;\n\nexport class DataViewContainer extends React.Component {\n  state = {\n    minCount: 2,\n    chartType: 'hexbin',\n    displayTooltip: true\n  };\n\n  onCountSliderChange = count => {\n    this.setState({ minCount: count });\n  };\n\n  onChartTypeChange = e => {\n    this.setState({ chartType: e.target.value });\n  };\n\n  onTooltipChange = displayTooltip => {\n    this.setState({ displayTooltip });\n  };\n\n  render() {\n    return (\n      <div className='data-view'>\n        <ShotChart\n          playerId={this.props.playerId}\n          minCount={this.state.minCount}\n          chartType={this.state.chartType}\n          displayTooltip={this.state.displayTooltip}\n        />\n        <div className='filters'>\n          <div className='slider'>\n            {this.state.chartType === 'hexbin' ? (\n              <CountSlider\n                value={this.state.minCount}\n                onCountSliderChange={_.debounce(this.onCountSliderChange, 500)}\n              />\n            ) : null}\n          </div>\n          <br />\n          <div className='switch'>\n          <Row>\n            <Col span={9}>\n              <RadioGroup\n                onChange={this.onChartTypeChange}\n                value={this.state.chartType}\n              >\n                <Radio value='hexbin'><span>Hexbin</span></Radio>\n                <Radio value='scatter'><span>Scatter</span></Radio>\n              </RadioGroup>\n            </Col>\n            <Col span={4}>\n              <Switch\n                checkedChildren='On'\n                unCheckedChildren='Off'\n                onChange={this.onTooltipChange}\n                defaultChecked\n              />\n            </Col>\n          </Row>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataViewContainer;\n","import React from \"react\";\nimport nba from \"nba\";\n\nimport { AutoComplete, Input, Icon } from 'antd';\nimport { PROFILE_PIC_URL_PREFIX } from '../constants';\n\nconst Option = AutoComplete.Option;\n\nexport class SearchBar extends React.Component {\n  state = {\n    dataSource: []\n  };\n\n  handleSearch = value => {\n    this.setState({\n      dataSource: !value\n        ? []\n        : nba.searchPlayers(value).map(player => ({\n            fullName: player.fullName,\n            playerId: player.playerId\n          }))\n    });\n  };\n\n  onSelect = (playerName) => {\n      this.props.handleSelectPlayer(playerName);\n  }\n\n  render() {\n    const { dataSource } = this.state;\n    const options = dataSource.map(player => (\n      <Option\n        key={player.fullName}\n        value={player.fullName}\n        className=\"player-option\"\n      >\n        <img\n          className=\"player-option-image\"\n          src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`}\n          alt='player profile'\n        />\n        <span className=\"player-option-label\">{player.fullName}</span>\n      </Option>\n    ));\n\n    return (\n      <AutoComplete\n        className=\"search-bar\"\n        size=\"large\"\n        dataSource={options}\n        onSelect={this.onSelect}\n        onSearch={this.handleSearch}\n        placeholder=\"Search NBA Player\"\n        optionLabelProp=\"value\"\n      >\n        <Input\n          suffix={<Icon type=\"search\" className=\"certain-category-icon\" />}\n        />\n      </AutoComplete>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport nba from \"nba\";\n\nimport Profile from \"./Profile\";\nimport DataViewContainer from \"./DataViewCountainer\";\nimport SearchBar from \"./SearchBar\";\nimport { DEFAULT_PLAYER_INFO } from '../constants';\n\nexport class Main extends React.Component {\n  state = {\n    playerInfo: DEFAULT_PLAYER_INFO\n  };\n\n  componentDidMount() {\n    this.loadPlayerInfo(\"Kawhi Leonard\");\n  }\n\n  handleSelectPlayer = playerName => {\n    this.loadPlayerInfo(playerName);\n  }\n\n  loadPlayerInfo = playerName => {\n    nba.stats\n      .playerInfo({ PlayerID: nba.findPlayer(playerName).playerId })\n      .then(info => {\n        const playerInfo = Object.assign(\n          info.commonPlayerInfo[0],\n          info.playerHeadlineStats[0]\n        );\n        console.log(info);\n        this.setState({ playerInfo });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <SearchBar handleSelectPlayer={this.handleSelectPlayer} />\n        <div className=\"player\">\n          <Profile playerInfo={this.state.playerInfo} />\n          <DataViewContainer playerId={this.state.playerInfo.playerId} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport TopNavBar from './TopNavBar';\nimport Main from './Main';\n\nfunction App() {\n    return (\n      <div className='App'>\n        <TopNavBar/>\n        <Main/>\n      </div>\n    );\n }\n \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}