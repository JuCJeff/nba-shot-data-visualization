{"version":3,"sources":["assets/nba-logoman-word-white.svg","components/TopNavBar.js","components/Profile.js","constants.js","components/ShotChart.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavBar","className","src","logo","alt","React","Component","Profile","this","props","playerInfo","teamAbbreviation","teamCity","teamName","playerName","height","weight","playerId","pts","reb","ast","pie","window","d3_hexbin","hexbin","ShotChart","nba","stats","shots","PlayerID","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","chart_court","court","width","chart_shots","shotRenderThreshold","displayToolTips","displayType","call","datum","id","Main","state","findPlayer","info","console","log","Object","assign","commonPlayerInfo","playerHeadlineStats","setState","catch","e","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d2002695.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import React from 'react';\nimport logo from \"../assets/nba-logoman-word-white.svg\";\n\nclass TopNavBar extends React.Component {\n    render() {\n        return (\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n            </header>\n        );\n    }\n}\n\nexport default TopNavBar;\n\n","import React from \"react\";\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from \"../constants\";\n\nexport class Profile extends React.Component {\n  render() {\n    const {\n      teamAbbreviation,\n      teamCity,\n      teamName,\n      playerName,\n      height,\n      weight,\n      playerId,\n      pts,\n      reb,\n      ast,\n      pie\n    } = this.props.playerInfo;\n\n    return (\n      <div className=\"profile\">\n        <div className=\"profile-entry player-name\">{`${playerName}`}</div>\n        <img\n          className=\"profile-pic\"\n          src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n          alt=\"Profile\"\n        />\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">Team</div>\n          <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\n        </div>\n        <img\n          className=\"team-logo\"\n          src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\n          alt=\"Team\"\n        />\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">Height</div>\n          <div className=\"profile-entry-right\">{`${height}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">Weight</div>\n          <div className=\"profile-entry-right\">{`${weight}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">PTS</div>\n          <div className=\"profile-entry-right\">{`${pts}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">REB</div>\n          <div className=\"profile-entry-right\">{`${reb}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">AST</div>\n          <div className=\"profile-entry-right\">{`${ast}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">PIE</div>\n          <div className=\"profile-entry-right\">{`${pie}`}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';","import React from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\n\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\n\nexport class ShotChart extends React.Component {\n static propTypes = {\n   playerId: PropTypes.number.isRequired,\n }\n\n componentDidUpdate() {\n   nba.stats.shots({\n     PlayerID: this.props.playerId\n   }).then((response) => {\n     const final_shots = response.shot_Chart_Detail.map(shot => ({\n       x: (shot.locX + 250) / 10,\n       y: (shot.locY + 50) / 10,\n       action_type: shot.actionType,\n       shot_distance: shot.shotDistance,\n       shot_made_flag: shot.shotMadeFlag,\n     }));\n\n     const courtSelection = d3.select(\"#shot-chart\");\n     const chart_court = court().width(500);\n     const chart_shots = shots().shotRenderThreshold(2).displayToolTips(true).displayType(\"hexbin\");\n     courtSelection.call(chart_court);\n     courtSelection.datum(final_shots).call(chart_shots);\n   });\n }\n render() {\n   return (\n       <div id=\"shot-chart\"></div>\n   );\n }\n}\n\nexport default ShotChart;","import React from \"react\";\nimport nba from \"nba\";\n\nimport Profile from \"./Profile\";\nimport ShotChart from './ShotChart';\n\nclass Main extends React.Component {\n  state = {\n    playerId: nba.findPlayer(\"Stephen Curry\").playerId,\n    playerInfo: {}\n  };\n\n  componentDidMount() {\n    nba.stats\n      .playerInfo({ PlayerID: this.state.playerId })\n      .then(info => {\n        console.log(info);\n        const playerInfo = Object.assign(\n          info.commonPlayerInfo[0],\n          info.playerHeadlineStats[0]\n        );\n        console.log(\"playerInfo\", playerInfo);\n        this.setState({ playerInfo });\n      })\n      .catch(e => console.log(e));\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <Profile playerInfo={this.state.playerInfo}/>\n        <ShotChart playerId={this.state.playerId}/>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport TopNavBar from './TopNavBar';\nimport Main from './Main';\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <TopNavBar/>\n        <Main/>\n      </div>\n    );\n }\n \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}